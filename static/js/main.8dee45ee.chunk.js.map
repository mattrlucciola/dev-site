{"version":3,"sources":["components/main/Progress.jsx","components/display/ProjectNav.jsx","components/display/ProjectPreview.jsx","components/display/ProjectDescription.jsx","components/display/ProjectStack.jsx","components/projects/BDA.jsx","components/projects/Diffuse.jsx","components/projects/BikeStar.jsx","components/projects/Cofi.jsx","components/main/Intro.jsx","components/main/Body.jsx","serviceWorker.js","index.js","App.js"],"names":["Progress","useState","scrollProgress","setScrollProgress","window","onscroll","e","scrollMax","srcElement","scrollingElement","scrollHeight","clientHeight","scrollPct","scrollTop","scrollProgressStyle","left","height","width","className","style","ProjectNav","projectObj","title","repoURL","siteURL","href","ProjectPreview","imgURL","target","rel","src","alt","ProjectDescription","description","ProjectStack","stackObj","stackElemArr","key","toolsElemArr","map","tool","idx","push","buildStackElem","BDA","frontend","Diffuse","backend","BikeStar","Cofi","Intro","id","Body","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8dee45ee.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nexport default function Progress(){\n    // destructuring\n\n    // state\n    const [scrollProgress, setScrollProgress] = useState(0);\n    const [activeProgress, setActiveProgress] = useState(false);\n    const [mouseIsDown, setMouseIsDown] = useState(false);\n\n    // util\n    const updateScrollProgress = (e) => {\n        let scrollMax = e.srcElement.scrollingElement.scrollHeight - e.srcElement.scrollingElement.clientHeight;\n        let scrollCurrent = e.srcElement.scrollingElement.scrollTop;\n        let scrollPct = scrollCurrent / scrollMax;\n        if (scrollPct <= 1 && scrollPct >= 0) {\n            setScrollProgress(() => {return scrollPct})\n        }\n    }\n    const clickScrollProgress = (e) => {\n        let pageHeight = e.clientY\n        let elementHeight = e.currentTarget.offsetHeight;\n        let offsetTop = e.currentTarget.getBoundingClientRect().top;\n\n        let yCoordPct = (pageHeight - offsetTop) / elementHeight;\n\n        let scrollMax = document.body.scrollHeight - window.innerHeight;\n        let scrollCurrent = window.scrollY;\n        window.scrollTo(0, yCoordPct * scrollMax)\n    }\n\n    window.onscroll = updateScrollProgress\n    const scrollProgressStyle = {\n        left: 0,\n        height: '100%',\n        width: `${scrollProgress * 100}%`,\n    }\n    return(\n        <div className=\"Progress noselect\" \n            // onMouseDown={() => {setMouseIsDown(() => true); setActiveProgress(() => true); console.log('activated')}}\n            // onMouseMove={(e) => {activeProgress && clickScrollProgress(e)}}\n            // onMouseUp={() => {setMouseIsDown(() => false); setActiveProgress(() => false); console.log('deactivated')}}\n            // onMouseLeave={() => {if (!mouseIsDown) {setActiveProgress(() =>  false); console.log('deactivated')}}}\n            >\n            <div className='prog-amt noselect' style={scrollProgressStyle} ></div>\n            <div>\n            </div>\n        </div>\n    )\n}","// App.jsx > Body.jsx > Main.jsx > _project-name_.jsx > ProjectNav.jsx\n\n// react\nimport React from 'react';\n\nexport default function ProjectNav({projectObj}){\n    // destructuring\n    let {title, repoURL, siteURL} = projectObj;\n\n    return(\n        <div className=\"ProjectNav\">\n            {title !== \"Matt Rocco Lucciola\" && <a href=\"#Intro\" className=\"home\">Home</a>}\n            <div className=\"title\">{title}</div>\n            <div className=\"urls\">\n                {repoURL && <a className=\"repoURL\" href={repoURL}>GitHub</a>}\n                {siteURL && <a className=\"siteURL\" href={siteURL}>Website</a>}\n            </div>\n        </div>\n    )\n}","// App.jsx > Body.jsx > Main.jsx > _project-name_.jsx > ProjectPreview.jsx\n\n// react\nimport React from 'react';\n\nexport default function ProjectPreview({projectObj}){\n    // destructuring\n    const {imgURL, siteURL} = projectObj;\n    const buildImgElem = () => {\n\n        return (\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={siteURL}><img src={imgURL} alt=\"\" className=\"preview-img\"/></a>\n        )\n    }\n    return(\n        <div className=\"ProjectPreview\">\n            {imgURL && buildImgElem()}\n        </div>\n    )\n}","// App.jsx > Body.jsx > Main.jsx > _project-name_.jsx > ProjectDescription.jsx\n\n// react\nimport React from 'react';\n\nexport default function ProjectDescription({projectObj}){\n    // destructuring\n    let {description} = projectObj;\n\n    return(\n        <div className=\"ProjectDescription\">\n            {description && description}\n        </div>\n    )\n}","// App.jsx > Body.jsx > Main.jsx > _project-name_.jsx > ProjectIntro.jsx\n\n// react\nimport React from 'react';\n\nexport default function ProjectStack({projectObj}){\n    // destructuring\n    let {stackObj} = projectObj;\n\n    const buildStackElem = () => {\n        // holds our whole stack\n        let stackElemArr = []\n\n        if (typeof stackObj !== typeof {}) {\n            return <div className=\"notstack\"></div>\n        }\n        for (const key in stackObj) {\n            const toolsArr = stackObj[key]\n            const toolsElemArr = toolsArr.map((tool, idx) => {\n                return (\n                    <div className={`${key} tool`} key={`${key}-${tool}-${idx}`}>{tool}</div>\n                )\n            })\n            stackElemArr.push(\n            <div className={`${key} group`}>\n                <div className=\"group-title\">{key} </div>\n                <div className=\"group-list\">{toolsElemArr} </div>\n            </div>\n            )\n        }\n        return stackElemArr\n    }\n    return(\n        <div className=\"ProjectStack\">\n            {buildStackElem()}\n        </div>\n    )\n}","// App.jsx > Body.jsx > Main.jsx > BDA.jsx\n\n// react\nimport React from 'react';\n\n// projects\nimport ProjectNav         from '../display/ProjectNav';\nimport ProjectPreview     from '../display/ProjectPreview';\nimport ProjectDescription from '../display/ProjectDescription';\nimport ProjectStack       from '../display/ProjectStack';\n\nexport default function BDA(){\n    const projectObj = {\n        title: \"BDA\",\n        repoURL: \"https://github.com/mattrlucciola/bpm-detection-algorithm.git\",\n        siteURL: \"https://mattrlucciola.github.io/bpm-detection-algorithm/\",\n        description: \"Detects BPM and displays track information from user-added songs using a simple peak-detection algorithm\",\n        stackObj: {\n            frontend: ['JavaScript (ES6)', 'Web Audio API'],\n        },\n        imgURL: \"/assets/images/bda-preview.png\",\n    }\n    return(\n        <div className=\"BDA project\">\n            <ProjectNav projectObj={projectObj} />\n            <ProjectPreview projectObj={projectObj} />\n            <ProjectDescription projectObj={projectObj} />\n            <ProjectStack projectObj={projectObj} />\n        </div>\n    )\n}","// App.jsx > Body.jsx > Main.jsx > Diffuse.jsx\n\n// react\nimport React from 'react';\n\n// projects\nimport ProjectNav         from '../display/ProjectNav';\nimport ProjectPreview     from '../display/ProjectPreview';\nimport ProjectStack       from '../display/ProjectStack';\nimport ProjectDescription from '../display/ProjectDescription';\n\nexport default function Diffuse(){\n    const projectObj = {\n        title: \"Diffuse\",\n        repoURL: \"https://github.com/mattrlucciola/diffuse.git\",\n        siteURL: \"https://diffuse.dev\",\n        description: `\\\n            Collaborative songwriting software.\\\n            Register, sign in, create and save projects to your profile.\\\n            Add others to contribute to your songs and track the history of the songs progression!\\\n        `,\n        stackObj: {\n            frontend: ['React.js', 'D3.js'],\n            backend: ['MongoDB, Node.js, Django'],\n        },\n        imgURL: \"/assets/images/diffuse-preview.png\",\n    }\n    return(\n        <div className=\"Diffuse project\">\n            <ProjectNav projectObj={projectObj} />\n            <ProjectPreview projectObj={projectObj} />\n            <ProjectDescription projectObj={projectObj} />\n            <ProjectStack projectObj={projectObj} />\n        </div>\n    )\n}","// App.jsx > Body.jsx > Main.jsx > BikeStar.jsx\n\n// react\nimport React from 'react';\n\n// projects\nimport ProjectNav         from '../display/ProjectNav';\nimport ProjectPreview     from '../display/ProjectPreview';\nimport ProjectStack       from '../display/ProjectStack';\nimport ProjectDescription from '../display/ProjectDescription';\n// import ProjectDescription from '../display/ProjectDescription';\n\nexport default function BikeStar(){\n    const projectObj = {\n        title: \"BikeStar\",\n        repoURL: \"https://github.com/mattrlucciola/bikestar.git\",\n        siteURL: \"https://tranquil-bastion-44697.herokuapp.com/\",\n        description: \"This application allows cyclists to find trails in select cities.  The app maintains a user-generated list of trails, conaining useful information regarding navigation to and from the trail, features, and ratings.\",\n        stackObj: {\n            frontend: ['React.js'],\n            backend: ['Node.js', 'Express.js', 'PostgreSQL']\n        },\n        imgURL: \"/assets/images/bikestar-preview.png\",\n        // body: \"Search \"\n    }\n    return(\n        <div className=\"BikeStar project\">\n            <ProjectNav projectObj={projectObj} />\n            <ProjectPreview projectObj={projectObj} />\n            <ProjectDescription projectObj={projectObj} />\n            <ProjectStack projectObj={projectObj} />\n        </div>\n    )\n}","// App.jsx > Body.jsx > Main.jsx > Cofi.jsx\n\n// react\nimport React from 'react';\n\n// projects\nimport ProjectNav         from '../display/ProjectNav';\nimport ProjectPreview     from '../display/ProjectPreview';\nimport ProjectStack       from '../display/ProjectStack';\nimport ProjectDescription from '../display/ProjectDescription';\n\nexport default function Cofi(){\n    const projectObj = {\n        title: \"Cofi\",\n        repoURL: \"https://github.com/mattrlucciola/cofi.git\",\n        siteURL: \"https://mattrlucciola.github.io/cofi/\",\n        description: `\\\n            A digital interface for synthesizing musical sequences in a step-wise manner.\\\n            Simply point and click on the note you want to activate, and the time at which to activate.\\\n        `,\n        stackObj: {\n            frontend: ['React.js', 'Web Audio API'],\n        },\n        imgURL: \"/assets/images/cofi-preview.png\",\n    }\n    return(\n        <div className=\"Cofi project\">\n            <ProjectNav projectObj={projectObj} />\n            <ProjectPreview projectObj={projectObj} />\n            <ProjectDescription projectObj={projectObj} />\n            <ProjectStack projectObj={projectObj} />\n        </div>\n    )\n}","import React from 'react';\n\n// components\nimport ProjectNav from '../display/ProjectNav';\n\nexport default function Intro(){\n    const introText = \n        <div className=\"introText\">\n            \n        </div>\n    return(\n        <div className='Intro' id=\"Intro\" >\n            <div className=\"introNav\">\n                <div className='title'>Matthew Rocco Lucciola</div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\n// components\nimport Main from './Main';\nimport Nav from './Nav';\nimport Progress from './Progress';\nimport Intro from './Intro';\nimport BDA from '../projects/BDA';\nimport Diffuse from '../projects/Diffuse';\nimport BikeStar from '../projects/BikeStar';\nimport Cofi from '../projects/Cofi';\n\nexport default function Body(){\n    return(\n        <div className=\"Body\">\n            <Progress />\n            {/* <Nav /> */}\n            {/* <Main /> */}\n            <Intro />\n            <BDA />\n            <Diffuse />\n            <BikeStar />\n            <Cofi />\n        </div>\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport Body from './components/main/Body';\nimport './App.css';\n\nexport default function App() {\n    return (\n        <div className=\"App\">\n            <Body />\n        </div>\n    );\n}\n"],"sourceRoot":""}